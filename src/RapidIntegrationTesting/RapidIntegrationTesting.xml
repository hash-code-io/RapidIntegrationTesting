<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RapidIntegrationTesting</name>
    </assembly>
    <members>
        <member name="T:RapidIntegrationTesting.Auth.AuthConstants">
            <summary>
                Constants used for Authorization
            </summary>
        </member>
        <member name="F:RapidIntegrationTesting.Auth.AuthConstants.JwtNameClaim">
            <summary>
                The key used for the Name claim
            </summary>
        </member>
        <member name="F:RapidIntegrationTesting.Auth.AuthConstants.JwtRoleClaim">
            <summary>
                The key used for the Role claim
            </summary>
        </member>
        <member name="F:RapidIntegrationTesting.Auth.AuthConstants.TestUserNameHeaderName">
            <summary>
                The header used to communicate imerpsonation
            </summary>
        </member>
        <member name="T:RapidIntegrationTesting.Configuration.WebAppConfigurationValue">
            <summary>
                Configuration Value to be added to the <see cref="T:RapidIntegrationTesting.TestingWebAppFactory`1" />'s Configuration
            </summary>
            <param name="Key">The key to use</param>
            <param name="Value">The value to tuse</param>
        </member>
        <member name="M:RapidIntegrationTesting.Configuration.WebAppConfigurationValue.#ctor(System.String,System.String)">
            <summary>
                Configuration Value to be added to the <see cref="T:RapidIntegrationTesting.TestingWebAppFactory`1" />'s Configuration
            </summary>
            <param name="Key">The key to use</param>
            <param name="Value">The value to tuse</param>
        </member>
        <member name="P:RapidIntegrationTesting.Configuration.WebAppConfigurationValue.Key">
            <summary>The key to use</summary>
        </member>
        <member name="P:RapidIntegrationTesting.Configuration.WebAppConfigurationValue.Value">
            <summary>The value to tuse</summary>
        </member>
        <member name="T:RapidIntegrationTesting.ContainerManagement.ContainerConfigurations">
            <summary>
                Holder of configurations for a container
            </summary>
        </member>
        <member name="M:RapidIntegrationTesting.ContainerManagement.ContainerConfigurations.#ctor">
            <inheritdoc />
        </member>
        <member name="M:RapidIntegrationTesting.ContainerManagement.ContainerConfigurations.#ctor(System.Collections.Generic.IEnumerable{RapidIntegrationTesting.Configuration.WebAppConfigurationValue})">
            <inheritdoc />
        </member>
        <member name="P:RapidIntegrationTesting.ContainerManagement.ContainerConfigurations.Empty">
            <summary>
                Empty list of configuration
            </summary>
        </member>
        <member name="T:RapidIntegrationTesting.ContainerManagement.ContainerManager">
            <summary>
                Base class for Container Management of the <see cref="T:RapidIntegrationTesting.TestingWebAppFactory`1" />
            </summary>
        </member>
        <member name="M:RapidIntegrationTesting.ContainerManagement.ContainerManager.ShutdownContainers">
            <summary>
                Shuts down all managed containers
            </summary>
            <returns></returns>
        </member>
        <member name="M:RapidIntegrationTesting.ContainerManagement.ContainerManager.AddContainers(System.Func{System.Threading.Tasks.Task{RapidIntegrationTesting.ContainerManagement.RunningContainerInfo}}[])">
            <summary>
                Add containers to be started with the WebAppFactory. The given builders MUST be fully configured
            </summary>
            <param name="builderCallbacks">Callbacks used to build and start the given containers</param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:RapidIntegrationTesting.ContainerManagement.ContainerManager.StartContainers">
            <summary>
                Function to start all containers and provide configuration values based on them
            </summary>
            <returns>A list of functions to start the containers</returns>
        </member>
        <member name="T:RapidIntegrationTesting.ContainerManagement.RunningContainerInfo">
            <summary>
                Wrapper class for a started container along with it configuration
            </summary>
            <param name="Container">The started container</param>
            <param name="Configurations">The container's configuration</param>
        </member>
        <member name="M:RapidIntegrationTesting.ContainerManagement.RunningContainerInfo.#ctor(DotNet.Testcontainers.Containers.IContainer,RapidIntegrationTesting.ContainerManagement.ContainerConfigurations)">
            <summary>
                Wrapper class for a started container along with it configuration
            </summary>
            <param name="Container">The started container</param>
            <param name="Configurations">The container's configuration</param>
        </member>
        <member name="P:RapidIntegrationTesting.ContainerManagement.RunningContainerInfo.Container">
            <summary>The started container</summary>
        </member>
        <member name="P:RapidIntegrationTesting.ContainerManagement.RunningContainerInfo.Configurations">
            <summary>The container's configuration</summary>
        </member>
        <member name="T:RapidIntegrationTesting.Options.WebAppFactoryAuthOptions">
            <summary>
                Auth Options
            </summary>
        </member>
        <member name="F:RapidIntegrationTesting.Options.WebAppFactoryAuthOptions.DefaultTestUserName">
            <summary>
                The default user name to use for Authentication
            </summary>
        </member>
        <member name="P:RapidIntegrationTesting.Options.WebAppFactoryAuthOptions.UserClaimsMapping">
            <summary>
                Mappings from UserNames to Claims.
            </summary>
        </member>
        <member name="P:RapidIntegrationTesting.Options.WebAppFactoryAuthOptions.UseTestAuth">
            <summary>
                Whether or not to set up a call to AddAuthentication with given options
            </summary>
        </member>
        <member name="P:RapidIntegrationTesting.Options.WebAppFactoryAuthOptions.SchemeName">
            <summary>
                The scheme to use
            </summary>
        </member>
        <member name="T:RapidIntegrationTesting.Options.WebAppFactoryOptions">
            <summary>
                Options to configure the <see cref="T:RapidIntegrationTesting.TestingWebAppFactory`1" />
            </summary>
        </member>
        <member name="P:RapidIntegrationTesting.Options.WebAppFactoryOptions.Auth">
            <summary>
                Authorization Options
            </summary>
        </member>
        <member name="P:RapidIntegrationTesting.Options.WebAppFactoryOptions.SignalR">
            <summary>
                Options for configuring SignalR
            </summary>
        </member>
        <member name="P:RapidIntegrationTesting.Options.WebAppFactoryOptions.EnvironmentName">
            <summary>
                The ASPNETCORE_ENVIRONMENT to use
            </summary>
        </member>
        <member name="P:RapidIntegrationTesting.Options.WebAppFactoryOptions.AdditionalConfigurations">
            <summary>
                Additional configurations values to be added to the <see cref="T:RapidIntegrationTesting.TestingWebAppFactory`1" />'s Configuration
            </summary>
        </member>
        <member name="T:RapidIntegrationTesting.Options.WebAppFactorySignalROptions">
            <summary>
                SignalR Options
            </summary>
        </member>
        <member name="P:RapidIntegrationTesting.Options.WebAppFactorySignalROptions.DefaultHubToUse">
            <summary>
                The relative URI to the SignalR Hub to use for the connection. Defaults to "hubs/frontendIntegration"
            </summary>
        </member>
        <member name="P:RapidIntegrationTesting.Options.WebAppFactorySignalROptions.FurtherConfig">
            <summary>
                Further configuration of the <see cref="T:Microsoft.AspNetCore.SignalR.Client.IHubConnectionBuilder" />. Only to be used in advanced scenarios.
                Could be used, for instance, to configure "AddNewtonsoftJsonProtocol".
                <para> Do NOT call "WithUrl", as that part is already correctly configured</para>
            </summary>
        </member>
        <member name="T:RapidIntegrationTesting.SignalR.ISignalRCallbackDescriptor">
            <summary>
                Descriptor holding information about SignalR Callbacks
            </summary>
        </member>
        <member name="M:RapidIntegrationTesting.SignalR.ISignalRCallbackDescriptor.Setup(Microsoft.AspNetCore.SignalR.Client.HubConnection)">
            <summary>
                Adds the callback of this descriptor to the given <paramref name="hubConnection" />
            </summary>
            <param name="hubConnection">The connection to add the callback to</param>
            <returns>The subscription to the signalR connection. Dispose this to no longer receive notifications of incoming events</returns>
        </member>
        <member name="T:RapidIntegrationTesting.SignalR.SignalRCallbackDescriptorExtensions">
            <summary>
                Extensions
            </summary>
        </member>
        <member name="M:RapidIntegrationTesting.SignalR.SignalRCallbackDescriptorExtensions.RegisterDescriptors(Microsoft.AspNetCore.SignalR.Client.HubConnection,RapidIntegrationTesting.SignalR.ISignalRCallbackDescriptor[])">
            <summary>
                Adds the given <paramref name="descriptors" /> to the <paramref name="hubConnection" />
            </summary>
            <param name="hubConnection">The connection to add the descriptors to</param>
            <param name="descriptors">The descriptors to add</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:RapidIntegrationTesting.SignalR.SignalRCallbackDescriptorExtensions.Build(Microsoft.AspNetCore.SignalR.Client.IHubConnectionBuilder,RapidIntegrationTesting.SignalR.ISignalRCallbackDescriptor[])">
            <summary>
                Builds the <see cref="T:Microsoft.AspNetCore.SignalR.Client.HubConnection" /> using the given <paramref name="builder" /> and then adds the given
                <paramref name="descriptors" />
            </summary>
            <param name="builder">The builder to use for building the <see cref="T:Microsoft.AspNetCore.SignalR.Client.HubConnection" /></param>
            <param name="descriptors">The descriptors to add</param>
            <returns>The built <see cref="T:Microsoft.AspNetCore.SignalR.Client.HubConnection" /></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:RapidIntegrationTesting.SignalR.SignalRCallbackDescriptorFactory">
            <summary>
                Factory to create <see cref="T:RapidIntegrationTesting.SignalR.ISignalRCallbackDescriptor" />.
            </summary>
        </member>
        <member name="M:RapidIntegrationTesting.SignalR.SignalRCallbackDescriptorFactory.Create``1(System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task}},System.Action)">
            <summary>
                Produces a Descriptor meant to be added a <see cref="T:Microsoft.AspNetCore.SignalR.Client.HubConnection" />
            </summary>
            <typeparam name="TInterface">The interface for the Hub</typeparam>
            <param name="expression">Expression detailing for which hub method a descriptor is to be returned</param>
            <param name="handler">The handler to be added to the <see cref="T:Microsoft.AspNetCore.SignalR.Client.HubConnection" /></param>
            <returns>The created Descriptor</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:RapidIntegrationTesting.SignalR.SignalRCallbackDescriptorFactory.Create``1(System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task}},System.Func{System.Threading.Tasks.Task})">
            <summary>
                Produces a Descriptor meant to be added a <see cref="T:Microsoft.AspNetCore.SignalR.Client.HubConnection" />
            </summary>
            <typeparam name="TInterface">The interface for the Hub</typeparam>
            <param name="expression">Expression detailing for which hub method a descriptor is to be returned</param>
            <param name="handler">The handler to be added to the <see cref="T:Microsoft.AspNetCore.SignalR.Client.HubConnection" /></param>
            <returns>The created Descriptor</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:RapidIntegrationTesting.SignalR.SignalRCallbackDescriptorFactory.Create``2(System.Linq.Expressions.Expression{System.Func{``0,``1,System.Threading.Tasks.Task}},System.Action{``1})">
            <summary>
                Produces a Descriptor meant to be added a <see cref="T:Microsoft.AspNetCore.SignalR.Client.HubConnection" />
            </summary>
            <typeparam name="TInterface">The interface for the Hub</typeparam>
            <typeparam name="TArgument">The argument to the method</typeparam>
            <param name="expression">Expression detailing for which hub method a descriptor is to be returned</param>
            <param name="handler">The handler to be added to the <see cref="T:Microsoft.AspNetCore.SignalR.Client.HubConnection" /></param>
            <returns>The created Descriptor</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:RapidIntegrationTesting.SignalR.SignalRCallbackDescriptorFactory.Create``2(System.Linq.Expressions.Expression{System.Func{``0,``1,System.Threading.Tasks.Task}},System.Func{``1,System.Threading.Tasks.Task})">
            <summary>
                Produces a Descriptor meant to be added a <see cref="T:Microsoft.AspNetCore.SignalR.Client.HubConnection" />
            </summary>
            <typeparam name="TInterface">The interface for the Hub</typeparam>
            <typeparam name="TArgument">The argument to the method</typeparam>
            <param name="expression">Expression detailing for which hub method a descriptor is to be returned</param>
            <param name="handler">The handler to be added to the <see cref="T:Microsoft.AspNetCore.SignalR.Client.HubConnection" /></param>
            <returns>The created Descriptor</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:RapidIntegrationTesting.SignalR.SignalRTestingCallbackDescriptorFactory">
            <summary>
                Factory to create <see cref="T:RapidIntegrationTesting.SignalR.ISignalRCallbackDescriptor" />. Methods contained are meant for testing purposes only
            </summary>
        </member>
        <member name="M:RapidIntegrationTesting.SignalR.SignalRTestingCallbackDescriptorFactory.Create``2(System.Linq.Expressions.Expression{System.Func{``0,``1,System.Threading.Tasks.Task}},System.Threading.Tasks.Task{``1}@,System.Int32)">
            <summary>
                Meant for testing purposes only. Produces a Descriptor meant to be added a <see cref="T:Microsoft.AspNetCore.SignalR.Client.HubConnection" />. As soon as
                an invocation
                is received the <paramref name="signalReceived" /> task triggers
                Any additional invocations will throw an exception.
            </summary>
            <typeparam name="TInterface">The interface for the Hub</typeparam>
            <typeparam name="TArgument">The argument to the method</typeparam>
            <param name="expression">Expression detailing for which hub method a descriptor is to be returned</param>
            <param name="signalReceived">Task that finishes as soon as an invocation is received</param>
            <param name="timeout">Amount to timeout after in milliseconds</param>
            <returns>The created Descriptor</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.TimeoutException"></exception>
        </member>
        <member name="M:RapidIntegrationTesting.SignalR.SignalRTestingCallbackDescriptorFactory.Create``1(System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task}},System.Threading.Tasks.Task@,System.Int32)">
            <summary>
                Meant for testing purposes only. Produces a Descriptor meant to be added a <see cref="T:Microsoft.AspNetCore.SignalR.Client.HubConnection" />. As soon as
                an invocation
                is received the <paramref name="signalReceived" /> task triggers
                Any additional invocations will throw an exception.
            </summary>
            <typeparam name="TInterface">The interface for the Hub</typeparam>
            <param name="expression">Expression detailing for which hub method a descriptor is to be returned</param>
            <param name="signalReceived">Task that finishes as soon as an invocation is received</param>
            <param name="timeout">Amount to timeout after in milliseconds</param>
            <returns>The created Descriptor</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:RapidIntegrationTesting.SignalR.TestSignalRCallbackDescriptorFactory">
            <summary>
                Factory to create <see cref="T:RapidIntegrationTesting.SignalR.ISignalRCallbackDescriptor" /> and set up signal receiving
            </summary>
        </member>
        <member name="M:RapidIntegrationTesting.SignalR.TestSignalRCallbackDescriptorFactory.Create``2(System.Linq.Expressions.Expression{System.Func{``0,``1,System.Threading.Tasks.Task}},System.Threading.Tasks.Task{``1}@,System.Int32)">
            <summary>
                Produces a Descriptor meant to be added a <see cref="T:Microsoft.AspNetCore.SignalR.Client.HubConnection" />
            </summary>
            <typeparam name="TInterface">The interface for the Hub</typeparam>
            <typeparam name="TArgument">The argument to the method</typeparam>
            <param name="expression">Expression detailing for which hub method a descriptor is to be returned</param>
            <param name="signalReceived">The task to await to receive the signal</param>
            <param name="timeout">The time to wait for reception of a signal. Defaults to 30s</param>
            <returns>The created Descriptor</returns>
        </member>
        <member name="M:RapidIntegrationTesting.SignalR.TestSignalRCallbackDescriptorFactory.Create``1(System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task}},System.Threading.Tasks.Task@,System.Int32)">
            <summary>
                Produces a Descriptor meant to be added a <see cref="T:Microsoft.AspNetCore.SignalR.Client.HubConnection" />
            </summary>
            <typeparam name="TInterface">The interface for the Hub</typeparam>
            <param name="expression">Expression detailing for which hub method a descriptor is to be returned</param>
            <param name="signalReceived">The task to await to receive the signal</param>
            <param name="timeout">The time to wait for reception of a signal. Defaults to 30s</param>
            <returns>The created Descriptor</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:RapidIntegrationTesting.TestingWebAppFactory`1">
            <summary>
                WebAppFactory to use for tests
            </summary>
            <typeparam name="TEntryPoint"></typeparam>
        </member>
        <member name="M:RapidIntegrationTesting.TestingWebAppFactory`1.#ctor">
            <inheritdoc />
        </member>
        <member name="P:RapidIntegrationTesting.TestingWebAppFactory`1.ConfigureOptions">
            <summary>
                Callback to configure options
            </summary>
        </member>
        <member name="M:RapidIntegrationTesting.TestingWebAppFactory`1.Initialize">
            <summary>
                Initializes the Factory. Needs to be called for every instance of this factory BEFORE using it (i.e. via XUnit's IAsyncLifetime)
            </summary>
            <returns></returns>
        </member>
        <member name="M:RapidIntegrationTesting.TestingWebAppFactory`1.ConfigureSignalRCallbacks(RapidIntegrationTesting.SignalR.ISignalRCallbackDescriptor[])">
            <summary>
                Method to build a <see cref="T:Microsoft.AspNetCore.SignalR.Client.HubConnection" /> that correctly connects to the server using the DefaultHubToUse configured in the options
                and listents to the given <paramref name="descriptors" />
            </summary>
            <param name="descriptors">The descriptors to add to the connection</param>
            <returns>The configured connection</returns>
        </member>
        <member name="M:RapidIntegrationTesting.TestingWebAppFactory`1.ConfigureSignalRCallbacks(System.String,RapidIntegrationTesting.SignalR.ISignalRCallbackDescriptor[])">
            <summary>
                Method to build a <see cref="T:Microsoft.AspNetCore.SignalR.Client.HubConnection" /> that correctly connects to the server and listents to the given <paramref name="descriptors" />
            </summary>
            <param name="relativeHubPath">The relative path to the hub to connect to, i.e. "hubs/frontendIntegration" </param>
            <param name="descriptors">The descriptors to add to the connection</param>
            <returns>The configured connection</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:RapidIntegrationTesting.TestingWebAppFactory`1.RunAsUser(System.String,System.Func{System.Net.Http.HttpClient,System.Threading.Tasks.Task})">
            <summary>
                Runs the given <paramref name="testCode" /> as the given <paramref name="userName" />.
                You must use the provided <see cref="T:System.Net.Http.HttpClient" /> for impersonation to work.
                Claims to add to the user will be looked up via <see cref="P:RapidIntegrationTesting.Options.WebAppFactoryAuthOptions.UserClaimsMapping" />
            </summary>
            <param name="userName">The user to impersonate</param>
            <param name="testCode">The code to run. Use the provided <see cref="T:System.Net.Http.HttpClient" /> to make calls to the server</param>
            <returns></returns>
        </member>
        <member name="M:RapidIntegrationTesting.TestingWebAppFactory`1.ConfigureWebHost(Microsoft.AspNetCore.Hosting.IWebHostBuilder)">
            <inheritdoc />
        </member>
    </members>
</doc>
